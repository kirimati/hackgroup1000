swagger: '2.0'
info:
  version: 0.0.1
  title: 'Hackgroup#1000 project'
host: 'localhost:10010'
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
parameters:
  username:
    name: username
    description: Name of the user
    in: path
    type: string
    required: true
  login:
    name: login
    description: login object
    in: body
    required: true
    schema:
      $ref: '#/definitions/login'
paths:
  /users:
    post:
      operationId: postUser
      description: New user registration
      parameters:
        - name: user
          in: body
          description: User informations
          required: true
          schema:
            $ref: '#/definitions/user_post'
      responses:
        '201':
          description: Registration success
        '400':
          description: Wrong format
        '409':
          description: Username already used
  /users/login:
    post:
      operationId: postLogin
      description: login check
      parameters:
        - $ref: '#/parameters/login'
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/user'
        '404':
          description: User not found
  /sets:
    post:
      operationId: postSet
      description: New set creation
      parameters:
        - name: set
          in: body
          description: Set informations
          required: true
          schema:
            $ref: '#/definitions/set_post'
      responses:
        '201':
          description: Set creation successful
        '400':
          description: Wrong format
        '409':
          description: Set title already used
definitions:
  user:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
  user_post:
    type: object
    required:
      - username
      - email
      - password
    properties:
      username:
        type: string
      email:
        type: string
      password:
        type: string
        format: password
  user_put:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      password:
        type: string
        format: password
  login:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
        format: password
  set:
    type: object
    properties:
      title:
        type: string
      tag:
        type: string
      username:
        type: string
      abstract:
        type: string
      picks:
        type: array
        items:
          $ref: '#/definitions/pick'
      links:
        type: array
        items:
          $ref: '#/definitions/link'
  set_post:
    type: object
    required:
      - title
      - tag
      - username
      - abstract
      - picks
      - links
    properties:
      title:
        type: string
      tag:
        type: string
      username:
        type: string
      abstract:
        type: string
      picks:
        type: array
        items:
          $ref: '#/definitions/pick'
      links:
        type: array
        items:
          $ref: '#/definitions/link'
  pick:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  link:
    type: object
    required:
      - reference
    properties:
      reference:
        type: string
